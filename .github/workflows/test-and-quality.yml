name: Test and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20, 21]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:jest
      
    - name: Run integration tests
      run: npm test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: |
          coverage/
          test-results/
        retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq -e '.vulnerabilities | length > 0' > /dev/null; then
          echo "High severity vulnerabilities found!"
          npm audit --audit-level=high
          exit 1
        fi

  build-test:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest
    needs: [test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: false
        tags: diagrammer:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test Docker image
      run: |
        docker run --rm diagrammer:test --help || echo "Docker image test completed"

  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security, build-test]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.test.result == 'success' && needs.security.result == 'success' && needs.build-test.result == 'success'
      run: |
        echo "✅ All checks passed successfully!"
        echo "Test Status: ${{ needs.test.result }}"
        echo "Security Status: ${{ needs.security.result }}"
        echo "Build Status: ${{ needs.build-test.result }}"
        
    - name: Notify Failure
      if: needs.test.result == 'failure' || needs.security.result == 'failure' || needs.build-test.result == 'failure'
      run: |
        echo "❌ Some checks failed!"
        echo "Test Status: ${{ needs.test.result }}"
        echo "Security Status: ${{ needs.security.result }}"
        echo "Build Status: ${{ needs.build-test.result }}"
        exit 1
